* Introduction

This is the design document of ABBS, a bulletin board system.

Liu Yubao <yubao.liu@gmail.com>\\
v0.1, Apr. 2008


* ChangeLog

|       DATE | CHANGE                                      |
|------------+---------------------------------------------|
| 2008-04-01 | first draft, layout of database files       |
|------------+---------------------------------------------|
| 2008-04-03 | switch to Emacs Org-mode, more descrciption |
|------------+---------------------------------------------|
| 2008-08-02 | introduce apdb, update documentation        |
|------------+---------------------------------------------|


* apdb, an append-only database

This specialized database is used to store articles for a BBS board,
see comment in apdb.c for details.


* Layout of data file and index file for a board database

Each board is represented with a data file and an index file. The
former has a ".d" suffix and contains information of all articles in
that board, including properties like author name, title and content
of each article. The latter has a ".i" suffix and contains indices of
all articles.

Bearing portability and efficiency in mind, the data file and index
file contain machine and compiler dependent information like
endianness and structure alignment.


** Layout of index file

Index files are redundant and can be reconstructed from data files,
they are used to provide great efficiency to lookup articles,
primarily sequentially. All items in index file are fixed size and
sorted by their IDs, they contain only necessary information to show
article list.

Structure of index item:

| NAME       | TYPE         | COMMENT                                                          |
|------------+--------------+------------------------------------------------------------------|
| guard      | unsigned int | 0xDEADBEEF(the byte order in file implies endianness)            |
| flags      | unsigned int | flags represent 'g', 'm', '@', 'x', ';' in KBS                   |
| id         | unsigned int | a unique positive integer used to identify this article          |
| length     | size_t       | length of whole data item in data file                           |
| offset     | off_t        | offset of data item in data file, relative to the file beginning |
| pid        | unsigned int | parent id, id of the replied article                             |
| tid        | unsigned int | topic id, id of the first article on this topic                  |
| ctime      | time_t       | time of creation                                                 |
| mtime      | time_t       | time of last modification                                        |
| author     | 16 bytes     | author name of a article, including the trailing zero            |
| title      | 64 bytes     | title of a article, including the trailing zero                  |
|------------+--------------+------------------------------------------------------------------|


The first index item (id=0) is ignored as the first data item is used to record meta information
about this board database.

** Layout of data file

The data file is made up of many variable size records.

Structure of data item:

| NAME    | TYPE         | COMMENT                                                        |
|---------+--------------+----------------------------------------------------------------|
| guard   | unsigned int | 0xDEADBEEF(the byte order in file implies endianness)          |
| flags   | unsigned int | flags represent 'g', 'm', '@', 'x', ';' in KBS                 |
| id      | unsigned int | a unique positive integer used to identify this article        |
| length  | size_t       | length of whole data item in data file                         |
| pid     | unsigned int | parent id, id of the replied article                           |
| tid     | unsigned int | topic id, id of the first article on this topic                |
| ctime   | time_t       | time of creation                                               |
| mtime   | time_t       | time of last modification                                      |
| author  | 16 bytes     | author name of a article, including the trailing zero          |
| title   | 64 bytes     | title of a article, including the trailing zero                |
| content | char []      | article content, its length is deduced from the "length" field |
|---------+--------------+----------------------------------------------------------------|

The data item lacks the "offset" field in the index item.

The content field of first data item(id=0) records some meta
information about the board database:

| NAME         | TYPE           | COMMENT                                                         |
|--------------+----------------+-----------------------------------------------------------------|
| index_t_len  | unsigned short | length of an index item without guard, flags, id, length fields |
| data_t_len   | unsigned short | length of a data item without content field                     |
| header_t_len | unsigned char  | content length of this data item                                |
| int_len      | unsigned char  | length of int                                                   |
| long_len     | unsigned char  | length of long                                                  |
| unsigned_len | unsigned char  | length of unsigned                                              |
| size_t_len   | unsigned char  | length of size_t                                                |
| off_t_len    | unsigned char  | length of off_t                                                 |
| time_t_len   | unsigned char  | length of time_t                                                |
| struct_pack  | unsigned char  | structure member alignment, see [1]                             |
|--------------+----------------+-----------------------------------------------------------------|


* File arrangement in a running ABBS

- boards/

This directory hierarchy is used to store board databases.

Board databases are placed in directories named after their districts,
for example:

| DISTRICT NAME | BOARD NAME | COMMENT                                 |
|---------------+------------+-----------------------------------------|
| CompTech      |            | district to discuss computer technology |
|---------------+------------+-----------------------------------------|
|               | \_info     | properties of this district             |
|               | LinuxApp   | properties of LinuxApp board            |
|               | LinuxApp.d | data file of LinuxApp board             |
|               | LinuxApp.i | index file of LinuxApp board            |
|               | LinuxApp.b | backup file of LinuxApp.d               |
|               | LinuxApp.s | running status file of LinuxApp board   |
|---------------+------------+-----------------------------------------|

The districts can be distributed over many machines.

The format of property file:
# NOTICE: The colons in the beginning of next lines are special marks
# of Emacs Org-mode.
:id: 101
:name: LinuxApp
:chinese-name: Linux 技术和应用
:data-file: boards/CompTech/LinuxApp.d
:index-file: boards/CompTech/LinuxApp.i
:backup-file: boards/CompTech/LinuxApp.b
:status-file: boards/CompTech/LinuxApp.s


- pool/

This directory hierarchy is used to store temporary articles being
edited by users. Each board has its own sub directory named after its
board name.

It's better to place this directory hierarchy in a RAM file system
like tmpfs on Linux.


- attachments/

This directory hierarchy is used to store attachments uploaded by
users. Each board has its own sub directory named after its board
name.  Each attachment is named after its MD5 digest, and an extra
file with .txt suffix and same base name is created to record some
properties of the attachment such as original file name.


* Programs in ABBS

| NAME     | COMMENT                                                             |
|----------+---------------------------------------------------------------------|
| abbsd    | the initial daemon of ABBS, used to startup boardd daemons          |
| boardd   | board daemon, responsible to modify data and index files of a board |
| bbs      | BBS client, read article and talk to boardd to post article         |
| bbsadmin | BBS management console                                              |
|----------+---------------------------------------------------------------------|

   
** abbsd

** boardd

** bbs

** bbsadmin

* Plan


Footnotes: 
[1] 0: 1 byte aligned, 1: 2 bytes aligned, 2: 4 bytes aligned, 3: 8
bytes aligned.

