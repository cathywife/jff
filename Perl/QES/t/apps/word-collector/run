#!/usr/bin/env perl
use strict;
use warnings;
use FindBin;
use lib "$FindBin::Bin/../../../lib";

use BerkeleyDB;
use Data::Dumper;
use Event::Worker;
use POE;

die "Must be called by Plumber!" unless exists $ENV{PLUMBER_PORT} &&
    exists $ENV{PLUMBER_COOKIE};

my $worker = Event::Worker->new(onInput => \&onInput);
print "worker: ", Dumper($worker);

my $db = tie my %words, "BerkeleyDB::Hash",
    -Filename   => "word_freq.db",
    -Flags      => DB_CREATE,
    -Mode       => 0644
        or die "Can't open bdb file \"word_freq.db\": $! $BerkeleyDB::Error\n";

POE::Session->create(
    inline_states   => {
        _start  => sub {
            $_[KERNEL]->delay("flush",  5);
        },

        flush   => sub {
            $db->db_sync;
            $_[KERNEL]->delay("flush",  5);
        }
    }
);

$worker->run();

####################################################################
sub onInput {
    my ($name, $line) = @_;

    my ($word, $count) = split /\s+/, $line;

    print "word-collector: $word $count\n";

    if (exists $words{$word}) {
        $words{$word} += $count;
    } else {
        $words{$word} = $count;
    }
}

