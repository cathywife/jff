Run slurm:

    ### on host
    docker run --name slurm -h slurm -e container=docker --cap-add SYS_ADMIN \
        -dt debian:sid bash -c 'mount | grep /sys/fs/cgroup/ | awk "{print \$3}" | xargs -n 1 umount; mount -oremount,rw /sys/fs/cgroup; mkdir /sys/fs/cgroup/systemd; find /etc/systemd/system /lib/systemd/system -name "*tty*" -delete; exec /sbin/init'

    ### in container
    apt install -y procps
    apt install -y postfix bsd-mailx
    apt install -y cgroup-tools logrotate slurm-wlm   # depends on slurmctld, slurmd, slurm-client, slurm-wlm-basic-plugins
    apt install -y slurmdbd mysql-server mysql-client mysql-utilities  # optional

    cp slurm.conf cgroup.conf slurmdbd.conf /etc/slurm-llnl/
    chgrp 644 /etc/slurm-llnl/{cgroup,slurm}.conf
    chgrp slurm /etc/slurm-llnl/slurmdbd.conf
    chmod 640 /etc/slurm-llnl/slurmdbd.conf

    mkdir /etc/slurm-llnl/cgroup
    cp /usr/share/doc/slurmd/examples/cgroup.release_common /etc/slurm-llnl/cgroup/release_common
    chmod 755 /etc/slurm-llnl/cgroup/release_common
    for s in `lssubsys`; do ln -s release_common /etc/slurm-llnl/cgroup/release_$s; done

    systemctl start cron
    systemctl start postfix
    systemctl start munge
    systemctl start mysql

    ## in mysql>
    #   CREATE USER slurm@localhost IDENTIFIED BY 'MYSQL_SLURM_PASSWORD';
    #   GRANT ALL ON slurm.* TO slurm@localhost;
    #   CREATE DATABASE slurm;

    systemctl start slurmdbd

    sacctmgr add cluster my_cluster     # ClusterName set in /etc/slurm-llnl/slurm.conf
    sacctmgr add account none,test Cluster=my_cluster Description="none" Organization="none"
    sacctmgr add user dieken DefaultAccount=test

    systemctl start slurmctld
    systemctl start slurmd

    ### on desktop
    apt install sview slurm-client


http://www.open-mpi.org/video/slurm/Slurm_EMC_Dec2012.pdf

    * resource: node -> NUMA board -> { memory, socket -> core -> hyperthread }
    * jobs: resource allocation requests
    * job steps: set of (typically parallel) tasks
    * partitions: job queues with limits and access controls
    * commands:
        * sbatch
        * salloc
        * srun -n8 a.out
        * sattach
        * sinfo
        * squeue
        * smap, sview
        * scontrol update NodeName=X State=[drain | resume] Reason=X
        * sacct,sstat, sreport
        * sacctmgr
        * sprio, sshare, sdiag
        * scancel, sbcast, srun_cr, strigger
        * slurmctld -Dcvvv  # run in foreground, purge state, verbose message
        * slurmd -Dcvvv
        * slurmd -C         # show node configuration

