Complete documentation for CL-HELLO can be found in the 'doc'
directory.

CL-HELLO is just a lisp application template. 

1. Installation

1.1. Probably the easiest way is

       (load "/path/to/cl-hello/load.lisp")

     This should compile and load CL-HELLO on most Common Lisp
     implementations.

1.2. With MK:DEFSYSTEM you can make a symbolic link from
     'cl-hello.system' and 'cl-hello-test.system' to your central registry
     (which by default is in '/usr/local/lisp/Registry/') and then issue
     the command

       (mk:compile-system "cl-hello")

     Note that this relies on TRUENAME returning the original file a
     symbolic link is pointing to. This will only work with AllegroCL
     6.2 if you've applied all patches with (SYS:UPDATE-ALLEGRO).

1.3. You can also use ASDF instead of MK:DEFSYSTEM in a similar way
     (use the .asd files instead of the .system files). On Debian with
     common-lisp-controller package installed, you can issue the command

       (clc:clc-require "cl-hello")

     otherwise issue the command

       (asdf:operate 'asdf:load-op "cl-hello")


2. Test

CL-HELLO comes with a small test suite.  To start it just load the file
"test.lisp" and evaluate (CL-HELLO-TEST:TEST).


3. Problem

3.1 GNU CLisp introduced :SCRIPT argument to SAVEINITMEM in 2006-01-26,
    but 2.38 released in 2006-01-24, so CLisp below 2.39 doesn't support
    :SCRIPT when dumps core.

3.2 SBCL introduced :EXECUTABLE argument to SAVE-LISP-AND-DIE in 0.9.10,
    so SBCL below 0.9.10 doesn't support :EXECUTABLE when dumps core.


